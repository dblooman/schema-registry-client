// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dblooman/schema-registry-client/models"
)

// GetSchemaReader is a Reader for the GetSchema structure.
type GetSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSchemaOK creates a GetSchemaOK with default headers values
func NewGetSchemaOK() *GetSchemaOK {
	return &GetSchemaOK{}
}

/*GetSchemaOK handles this case with default header values.

successful operation
*/
type GetSchemaOK struct {
	Payload *models.SchemaString
}

func (o *GetSchemaOK) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemaOK  %+v", 200, o.Payload)
}

func (o *GetSchemaOK) GetPayload() *models.SchemaString {
	return o.Payload
}

func (o *GetSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SchemaString)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaNotFound creates a GetSchemaNotFound with default headers values
func NewGetSchemaNotFound() *GetSchemaNotFound {
	return &GetSchemaNotFound{}
}

/*GetSchemaNotFound handles this case with default header values.

Error code 40403 -- Schema not found

*/
type GetSchemaNotFound struct {
}

func (o *GetSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemaNotFound ", 404)
}

func (o *GetSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSchemaInternalServerError creates a GetSchemaInternalServerError with default headers values
func NewGetSchemaInternalServerError() *GetSchemaInternalServerError {
	return &GetSchemaInternalServerError{}
}

/*GetSchemaInternalServerError handles this case with default header values.

Error code 50001 -- Error in the backend data store

*/
type GetSchemaInternalServerError struct {
}

func (o *GetSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}][%d] getSchemaInternalServerError ", 500)
}

func (o *GetSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
