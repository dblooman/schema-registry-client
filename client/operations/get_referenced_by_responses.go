// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetReferencedByReader is a Reader for the GetReferencedBy structure.
type GetReferencedByReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReferencedByReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReferencedByOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetReferencedByNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetReferencedByUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetReferencedByInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReferencedByOK creates a GetReferencedByOK with default headers values
func NewGetReferencedByOK() *GetReferencedByOK {
	return &GetReferencedByOK{}
}

/*GetReferencedByOK handles this case with default header values.

successful operation
*/
type GetReferencedByOK struct {
	Payload []int32
}

func (o *GetReferencedByOK) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedby][%d] getReferencedByOK  %+v", 200, o.Payload)
}

func (o *GetReferencedByOK) GetPayload() []int32 {
	return o.Payload
}

func (o *GetReferencedByOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReferencedByNotFound creates a GetReferencedByNotFound with default headers values
func NewGetReferencedByNotFound() *GetReferencedByNotFound {
	return &GetReferencedByNotFound{}
}

/*GetReferencedByNotFound handles this case with default header values.

Error code 40401 -- Subject not found
Error code 40402 -- Version not found
*/
type GetReferencedByNotFound struct {
}

func (o *GetReferencedByNotFound) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedby][%d] getReferencedByNotFound ", 404)
}

func (o *GetReferencedByNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReferencedByUnprocessableEntity creates a GetReferencedByUnprocessableEntity with default headers values
func NewGetReferencedByUnprocessableEntity() *GetReferencedByUnprocessableEntity {
	return &GetReferencedByUnprocessableEntity{}
}

/*GetReferencedByUnprocessableEntity handles this case with default header values.

Error code 42202 -- Invalid version
*/
type GetReferencedByUnprocessableEntity struct {
}

func (o *GetReferencedByUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedby][%d] getReferencedByUnprocessableEntity ", 422)
}

func (o *GetReferencedByUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReferencedByInternalServerError creates a GetReferencedByInternalServerError with default headers values
func NewGetReferencedByInternalServerError() *GetReferencedByInternalServerError {
	return &GetReferencedByInternalServerError{}
}

/*GetReferencedByInternalServerError handles this case with default header values.

Error code 50001 -- Error in the backend data store
*/
type GetReferencedByInternalServerError struct {
}

func (o *GetReferencedByInternalServerError) Error() string {
	return fmt.Sprintf("[GET /subjects/{subject}/versions/{version}/referencedby][%d] getReferencedByInternalServerError ", 500)
}

func (o *GetReferencedByInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
