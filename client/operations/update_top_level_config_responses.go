// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dblooman/schema-registry-client/models"
)

// UpdateTopLevelConfigReader is a Reader for the UpdateTopLevelConfig structure.
type UpdateTopLevelConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTopLevelConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTopLevelConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewUpdateTopLevelConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateTopLevelConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateTopLevelConfigOK creates a UpdateTopLevelConfigOK with default headers values
func NewUpdateTopLevelConfigOK() *UpdateTopLevelConfigOK {
	return &UpdateTopLevelConfigOK{}
}

/*UpdateTopLevelConfigOK handles this case with default header values.

successful operation
*/
type UpdateTopLevelConfigOK struct {
	Payload *models.ConfigUpdateRequest
}

func (o *UpdateTopLevelConfigOK) Error() string {
	return fmt.Sprintf("[PUT /config][%d] updateTopLevelConfigOK  %+v", 200, o.Payload)
}

func (o *UpdateTopLevelConfigOK) GetPayload() *models.ConfigUpdateRequest {
	return o.Payload
}

func (o *UpdateTopLevelConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigUpdateRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTopLevelConfigUnprocessableEntity creates a UpdateTopLevelConfigUnprocessableEntity with default headers values
func NewUpdateTopLevelConfigUnprocessableEntity() *UpdateTopLevelConfigUnprocessableEntity {
	return &UpdateTopLevelConfigUnprocessableEntity{}
}

/*UpdateTopLevelConfigUnprocessableEntity handles this case with default header values.

Error code 42203 -- Invalid compatibility level
*/
type UpdateTopLevelConfigUnprocessableEntity struct {
}

func (o *UpdateTopLevelConfigUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /config][%d] updateTopLevelConfigUnprocessableEntity ", 422)
}

func (o *UpdateTopLevelConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTopLevelConfigInternalServerError creates a UpdateTopLevelConfigInternalServerError with default headers values
func NewUpdateTopLevelConfigInternalServerError() *UpdateTopLevelConfigInternalServerError {
	return &UpdateTopLevelConfigInternalServerError{}
}

/*UpdateTopLevelConfigInternalServerError handles this case with default header values.

Error code 50001 -- Error in the backend data store
Error code 50003 -- Error while forwarding the request to the primary

*/
type UpdateTopLevelConfigInternalServerError struct {
}

func (o *UpdateTopLevelConfigInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /config][%d] updateTopLevelConfigInternalServerError ", 500)
}

func (o *UpdateTopLevelConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
