// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteSchemaVersionReader is a Reader for the DeleteSchemaVersion structure.
type DeleteSchemaVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSchemaVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSchemaVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteSchemaVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteSchemaVersionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSchemaVersionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteSchemaVersionOK creates a DeleteSchemaVersionOK with default headers values
func NewDeleteSchemaVersionOK() *DeleteSchemaVersionOK {
	return &DeleteSchemaVersionOK{}
}

/*DeleteSchemaVersionOK handles this case with default header values.

successful operation
*/
type DeleteSchemaVersionOK struct {
	Payload int32
}

func (o *DeleteSchemaVersionOK) Error() string {
	return fmt.Sprintf("[DELETE /subjects/{subject}/versions/{version}][%d] deleteSchemaVersionOK  %+v", 200, o.Payload)
}

func (o *DeleteSchemaVersionOK) GetPayload() int32 {
	return o.Payload
}

func (o *DeleteSchemaVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSchemaVersionNotFound creates a DeleteSchemaVersionNotFound with default headers values
func NewDeleteSchemaVersionNotFound() *DeleteSchemaVersionNotFound {
	return &DeleteSchemaVersionNotFound{}
}

/*DeleteSchemaVersionNotFound handles this case with default header values.

Error code 40401 -- Subject not found
Error code 40402 -- Version not found
*/
type DeleteSchemaVersionNotFound struct {
}

func (o *DeleteSchemaVersionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /subjects/{subject}/versions/{version}][%d] deleteSchemaVersionNotFound ", 404)
}

func (o *DeleteSchemaVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSchemaVersionUnprocessableEntity creates a DeleteSchemaVersionUnprocessableEntity with default headers values
func NewDeleteSchemaVersionUnprocessableEntity() *DeleteSchemaVersionUnprocessableEntity {
	return &DeleteSchemaVersionUnprocessableEntity{}
}

/*DeleteSchemaVersionUnprocessableEntity handles this case with default header values.

Error code 42202 -- Invalid version
*/
type DeleteSchemaVersionUnprocessableEntity struct {
}

func (o *DeleteSchemaVersionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /subjects/{subject}/versions/{version}][%d] deleteSchemaVersionUnprocessableEntity ", 422)
}

func (o *DeleteSchemaVersionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSchemaVersionInternalServerError creates a DeleteSchemaVersionInternalServerError with default headers values
func NewDeleteSchemaVersionInternalServerError() *DeleteSchemaVersionInternalServerError {
	return &DeleteSchemaVersionInternalServerError{}
}

/*DeleteSchemaVersionInternalServerError handles this case with default header values.

Error code 50001 -- Error in the backend data store
*/
type DeleteSchemaVersionInternalServerError struct {
}

func (o *DeleteSchemaVersionInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /subjects/{subject}/versions/{version}][%d] deleteSchemaVersionInternalServerError ", 500)
}

func (o *DeleteSchemaVersionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
