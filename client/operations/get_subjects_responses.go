// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSubjectsReader is a Reader for the GetSubjects structure.
type GetSubjectsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubjectsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubjectsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubjectsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubjectsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSubjectsOK creates a GetSubjectsOK with default headers values
func NewGetSubjectsOK() *GetSubjectsOK {
	return &GetSubjectsOK{}
}

/*GetSubjectsOK handles this case with default header values.

successful operation
*/
type GetSubjectsOK struct {
	Payload []string
}

func (o *GetSubjectsOK) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/subjects][%d] getSubjectsOK  %+v", 200, o.Payload)
}

func (o *GetSubjectsOK) GetPayload() []string {
	return o.Payload
}

func (o *GetSubjectsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectsNotFound creates a GetSubjectsNotFound with default headers values
func NewGetSubjectsNotFound() *GetSubjectsNotFound {
	return &GetSubjectsNotFound{}
}

/*GetSubjectsNotFound handles this case with default header values.

Error code 40403 -- Schema not found

*/
type GetSubjectsNotFound struct {
}

func (o *GetSubjectsNotFound) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/subjects][%d] getSubjectsNotFound ", 404)
}

func (o *GetSubjectsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubjectsInternalServerError creates a GetSubjectsInternalServerError with default headers values
func NewGetSubjectsInternalServerError() *GetSubjectsInternalServerError {
	return &GetSubjectsInternalServerError{}
}

/*GetSubjectsInternalServerError handles this case with default header values.

Error code 50001 -- Error in the backend data store

*/
type GetSubjectsInternalServerError struct {
}

func (o *GetSubjectsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /schemas/ids/{id}/subjects][%d] getSubjectsInternalServerError ", 500)
}

func (o *GetSubjectsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
