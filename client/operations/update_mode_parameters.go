// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/dblooman/schema-registry-client/models"
)

// NewUpdateModeParams creates a new UpdateModeParams object
// with the default values initialized.
func NewUpdateModeParams() *UpdateModeParams {
	var ()
	return &UpdateModeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateModeParamsWithTimeout creates a new UpdateModeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateModeParamsWithTimeout(timeout time.Duration) *UpdateModeParams {
	var ()
	return &UpdateModeParams{

		timeout: timeout,
	}
}

// NewUpdateModeParamsWithContext creates a new UpdateModeParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateModeParamsWithContext(ctx context.Context) *UpdateModeParams {
	var ()
	return &UpdateModeParams{

		Context: ctx,
	}
}

// NewUpdateModeParamsWithHTTPClient creates a new UpdateModeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateModeParamsWithHTTPClient(client *http.Client) *UpdateModeParams {
	var ()
	return &UpdateModeParams{
		HTTPClient: client,
	}
}

/*UpdateModeParams contains all the parameters to send to the API endpoint
for the update mode operation typically these are written to a http.Request
*/
type UpdateModeParams struct {

	/*Body
	  Update Request

	*/
	Body *models.ModeUpdateRequest
	/*Subject*/
	Subject string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update mode params
func (o *UpdateModeParams) WithTimeout(timeout time.Duration) *UpdateModeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update mode params
func (o *UpdateModeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update mode params
func (o *UpdateModeParams) WithContext(ctx context.Context) *UpdateModeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update mode params
func (o *UpdateModeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update mode params
func (o *UpdateModeParams) WithHTTPClient(client *http.Client) *UpdateModeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update mode params
func (o *UpdateModeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update mode params
func (o *UpdateModeParams) WithBody(body *models.ModeUpdateRequest) *UpdateModeParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update mode params
func (o *UpdateModeParams) SetBody(body *models.ModeUpdateRequest) {
	o.Body = body
}

// WithSubject adds the subject to the update mode params
func (o *UpdateModeParams) WithSubject(subject string) *UpdateModeParams {
	o.SetSubject(subject)
	return o
}

// SetSubject adds the subject to the update mode params
func (o *UpdateModeParams) SetSubject(subject string) {
	o.Subject = subject
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateModeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param subject
	if err := r.SetPathParam("subject", o.Subject); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
