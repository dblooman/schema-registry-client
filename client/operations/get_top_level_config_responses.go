// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dblooman/schema-registry-client/models"
)

// GetTopLevelConfigReader is a Reader for the GetTopLevelConfig structure.
type GetTopLevelConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTopLevelConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTopLevelConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetTopLevelConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTopLevelConfigOK creates a GetTopLevelConfigOK with default headers values
func NewGetTopLevelConfigOK() *GetTopLevelConfigOK {
	return &GetTopLevelConfigOK{}
}

/*GetTopLevelConfigOK handles this case with default header values.

successful operation
*/
type GetTopLevelConfigOK struct {
	Payload *models.Config
}

func (o *GetTopLevelConfigOK) Error() string {
	return fmt.Sprintf("[GET /config][%d] getTopLevelConfigOK  %+v", 200, o.Payload)
}

func (o *GetTopLevelConfigOK) GetPayload() *models.Config {
	return o.Payload
}

func (o *GetTopLevelConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Config)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTopLevelConfigInternalServerError creates a GetTopLevelConfigInternalServerError with default headers values
func NewGetTopLevelConfigInternalServerError() *GetTopLevelConfigInternalServerError {
	return &GetTopLevelConfigInternalServerError{}
}

/*GetTopLevelConfigInternalServerError handles this case with default header values.

Error code 50001 -- Error in the backend data store
*/
type GetTopLevelConfigInternalServerError struct {
}

func (o *GetTopLevelConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config][%d] getTopLevelConfigInternalServerError ", 500)
}

func (o *GetTopLevelConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
