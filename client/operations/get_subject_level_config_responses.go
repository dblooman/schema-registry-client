// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dblooman/schema-registry-client/models"
)

// GetSubjectLevelConfigReader is a Reader for the GetSubjectLevelConfig structure.
type GetSubjectLevelConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubjectLevelConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubjectLevelConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubjectLevelConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubjectLevelConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSubjectLevelConfigOK creates a GetSubjectLevelConfigOK with default headers values
func NewGetSubjectLevelConfigOK() *GetSubjectLevelConfigOK {
	return &GetSubjectLevelConfigOK{}
}

/*GetSubjectLevelConfigOK handles this case with default header values.

successful operation
*/
type GetSubjectLevelConfigOK struct {
	Payload *models.Config
}

func (o *GetSubjectLevelConfigOK) Error() string {
	return fmt.Sprintf("[GET /config/{subject}][%d] getSubjectLevelConfigOK  %+v", 200, o.Payload)
}

func (o *GetSubjectLevelConfigOK) GetPayload() *models.Config {
	return o.Payload
}

func (o *GetSubjectLevelConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Config)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubjectLevelConfigNotFound creates a GetSubjectLevelConfigNotFound with default headers values
func NewGetSubjectLevelConfigNotFound() *GetSubjectLevelConfigNotFound {
	return &GetSubjectLevelConfigNotFound{}
}

/*GetSubjectLevelConfigNotFound handles this case with default header values.

Subject not found
*/
type GetSubjectLevelConfigNotFound struct {
}

func (o *GetSubjectLevelConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /config/{subject}][%d] getSubjectLevelConfigNotFound ", 404)
}

func (o *GetSubjectLevelConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubjectLevelConfigInternalServerError creates a GetSubjectLevelConfigInternalServerError with default headers values
func NewGetSubjectLevelConfigInternalServerError() *GetSubjectLevelConfigInternalServerError {
	return &GetSubjectLevelConfigInternalServerError{}
}

/*GetSubjectLevelConfigInternalServerError handles this case with default header values.

Error code 50001 -- Error in the backend data store
*/
type GetSubjectLevelConfigInternalServerError struct {
}

func (o *GetSubjectLevelConfigInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config/{subject}][%d] getSubjectLevelConfigInternalServerError ", 500)
}

func (o *GetSubjectLevelConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
